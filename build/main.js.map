{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v1.32.0\n */\n\nimport * as utils from \"@iobroker/adapter-core\";\nimport axios from \"axios\";\n\ninterface GotifyMessage {\n    message?: string;\n    title?: string;\n    priority?: number;\n    contentType?: string;\n}\n\nclass Gotify extends utils.Adapter {\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: \"gotify\",\n        });\n        this.on(\"ready\", this.onReady.bind(this));\n        this.on(\"message\", this.onMessage.bind(this));\n        this.on(\"unload\", this.onUnload.bind(this));\n    }\n\n    /**\n     * Is called when databases are connected and adapter received configuration.\n     */\n    private async onReady(): Promise<void> {\n        // Initialize your adapter here\n\n        // The adapters config (in the instance object everything under the attribute \"native\") is accessible via\n        // this.config:\n        this.log.debug(\"config url: \" + this.config.url);\n        this.log.debug(\"config token: \" + this.config.token);\n        if (!this.supportsFeature || !this.supportsFeature(\"ADAPTER_AUTO_DECRYPT_NATIVE\")) {\n            this.config.token = this.decrypt(this.config.token);\n        }\n        if (this.config.url && this.config.token) {\n            this.log.info(\"Gotify adapter configured\");\n        } else {\n            this.terminate(\"Gotify adapter not configured\", utils.EXIT_CODES.INVALID_ADAPTER_CONFIG);\n        }\n    }\n\n    /**\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\n     */\n    private onUnload(callback: () => void): void {\n        try {\n            callback();\n        } catch (e) {\n            callback();\n        }\n    }\n\n    private onMessage(obj: ioBroker.Message): void {\n        if (typeof obj === \"object\" && obj.message) {\n            if (obj.command === \"send\") {\n                this.sendMessage(obj.message as GotifyMessage);\n                // Send response in callback if required\n                if (obj.callback) this.sendTo(obj.from, obj.command, \"Message received\", obj.callback);\n            }\n        }\n    }\n\n    private sendMessage(message: GotifyMessage): void {\n        if (this.config.url && this.config.token) {\n            axios\n                .post(this.config.url + \"/message?token=\" + this.config.token, {\n                    title: message.title,\n                    message: message.message,\n                    priority: message.priority,\n                    timeout: 1000,\n                    extras: {\n                        \"client::display\": {\n                            contentType: message.contentType,\n                        },\n                    },\n                })\n                .then(() => {\n                    this.log.debug(\"Successfully sent message to gotify\");\n                })\n                .catch((error) => {\n                    this.log.error(\"Error while sending message to gotify:\" + JSON.stringify(error));\n                });\n        } else {\n            this.log.error(\"Cannot send notification while not configured:\" + JSON.stringify(message));\n        }\n    }\n}\n\nif (require.main !== module) {\n    // Export the constructor in compact mode\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Gotify(options);\n} else {\n    // otherwise start the instance directly\n    (() => new Gotify())();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAIA,YAAuB;AACvB,mBAAkB;AASlB,MAAM,eAAe,MAAM,QAAQ;AAAA,EACxB,YAAY,UAAyC,CAAC,GAAG;AAC5D,UAAM;AAAA,MACF,GAAG;AAAA,MACH,MAAM;AAAA,IACV,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC;AAC5C,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC9C;AAAA,EAKA,MAAc,UAAyB;AAKnC,SAAK,IAAI,MAAM,iBAAiB,KAAK,OAAO,GAAG;AAC/C,SAAK,IAAI,MAAM,mBAAmB,KAAK,OAAO,KAAK;AACnD,QAAI,CAAC,KAAK,mBAAmB,CAAC,KAAK,gBAAgB,6BAA6B,GAAG;AAC/E,WAAK,OAAO,QAAQ,KAAK,QAAQ,KAAK,OAAO,KAAK;AAAA,IACtD;AACA,QAAI,KAAK,OAAO,OAAO,KAAK,OAAO,OAAO;AACtC,WAAK,IAAI,KAAK,2BAA2B;AAAA,IAC7C,OAAO;AACH,WAAK,UAAU,iCAAiC,MAAM,WAAW,sBAAsB;AAAA,IAC3F;AAAA,EACJ;AAAA,EAKQ,SAAS,UAA4B;AACzC,QAAI;AACA,eAAS;AAAA,IACb,SAAS,GAAP;AACE,eAAS;AAAA,IACb;AAAA,EACJ;AAAA,EAEQ,UAAU,KAA6B;AAC3C,QAAI,OAAO,QAAQ,YAAY,IAAI,SAAS;AACxC,UAAI,IAAI,YAAY,QAAQ;AACxB,aAAK,YAAY,IAAI,OAAwB;AAE7C,YAAI,IAAI;AAAU,eAAK,OAAO,IAAI,MAAM,IAAI,SAAS,oBAAoB,IAAI,QAAQ;AAAA,MACzF;AAAA,IACJ;AAAA,EACJ;AAAA,EAEQ,YAAY,SAA8B;AAC9C,QAAI,KAAK,OAAO,OAAO,KAAK,OAAO,OAAO;AACtC,mBAAAA,QACK,KAAK,KAAK,OAAO,MAAM,oBAAoB,KAAK,OAAO,OAAO;AAAA,QAC3D,OAAO,QAAQ;AAAA,QACf,SAAS,QAAQ;AAAA,QACjB,UAAU,QAAQ;AAAA,QAClB,SAAS;AAAA,QACT,QAAQ;AAAA,UACJ,mBAAmB;AAAA,YACf,aAAa,QAAQ;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ,CAAC,EACA,KAAK,MAAM;AACR,aAAK,IAAI,MAAM,qCAAqC;AAAA,MACxD,CAAC,EACA,MAAM,CAAC,UAAU;AACd,aAAK,IAAI,MAAM,2CAA2C,KAAK,UAAU,KAAK,CAAC;AAAA,MACnF,CAAC;AAAA,IACT,OAAO;AACH,WAAK,IAAI,MAAM,mDAAmD,KAAK,UAAU,OAAO,CAAC;AAAA,IAC7F;AAAA,EACJ;AACJ;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAEzB,SAAO,UAAU,CAAC,YAAuD,IAAI,OAAO,OAAO;AAC/F,OAAO;AAEH,GAAC,MAAM,IAAI,OAAO,GAAG;AACzB;",
  "names": ["axios"]
}
