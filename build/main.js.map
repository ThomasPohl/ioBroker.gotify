{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\r\n * Created with @iobroker/create-adapter v1.32.0\r\n */\r\n\r\nimport * as utils from \"@iobroker/adapter-core\";\r\nimport axios from \"axios\";\r\n\r\ninterface GotifyMessage {\r\n    message?: string;\r\n    title?: string;\r\n    priority?: number;\r\n    contentType?: string;\r\n}\r\n\r\nclass Gotify extends utils.Adapter {\r\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\r\n        super({\r\n            ...options,\r\n            name: \"gotify\",\r\n        });\r\n        this.on(\"ready\", this.onReady.bind(this));\r\n        this.on(\"message\", this.onMessage.bind(this));\r\n        this.on(\"unload\", this.onUnload.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Is called when databases are connected and adapter received configuration.\r\n     */\r\n    private async onReady(): Promise<void> {\r\n        // Initialize your adapter here\r\n\r\n        // The adapters config (in the instance object everything under the attribute \"native\") is accessible via\r\n        // this.config:\r\n        this.log.debug(\"config url: \" + this.config.url);\r\n        this.log.debug(\"config token: \" + this.config.token);\r\n        if (!this.supportsFeature || !this.supportsFeature(\"ADAPTER_AUTO_DECRYPT_NATIVE\")) {\r\n            this.config.token = this.decrypt(this.config.token);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\r\n     */\r\n    private onUnload(callback: () => void): void {\r\n        try {\r\n            callback();\r\n        } catch (e) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    private onMessage(obj: ioBroker.Message): void {\r\n        if (typeof obj === \"object\" && obj.message) {\r\n            if (obj.command === \"send\") {\r\n                this.sendMessage(obj.message as GotifyMessage);\r\n                // Send response in callback if required\r\n                if (obj.callback) this.sendTo(obj.from, obj.command, \"Message received\", obj.callback);\r\n            }\r\n        }\r\n    }\r\n\r\n    private sendMessage(message: GotifyMessage): void {\r\n        if (this.config.url && this.config.token) {\r\n            axios\r\n                .post(this.config.url + \"/message?token=\" + this.config.token, {\r\n                    title: message.title,\r\n                    message: message.message,\r\n                    priority: message.priority,\r\n                    timeout: 1000,\r\n                    extras: {\r\n                        \"client::display\": {\r\n                            contentType: message.contentType,\r\n                        },\r\n                    },\r\n                })\r\n                .then(() => {\r\n                    this.log.debug(\"Successfully sent message to gotify\");\r\n                })\r\n                .catch((error) => {\r\n                    this.log.error(\"Error while sending message to gotify:\" + JSON.stringify(error));\r\n                });\r\n        } else {\r\n            this.log.error(\"Cannot send notification while not configured:\" + JSON.stringify(message));\r\n        }\r\n    }\r\n}\r\n\r\nif (require.main !== module) {\r\n    // Export the constructor in compact mode\r\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Gotify(options);\r\n} else {\r\n    // otherwise start the instance directly\r\n    (() => new Gotify())();\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAIA,YAAuB;AACvB,mBAAkB;AASlB,MAAM,eAAe,MAAM,QAAQ;AAAA,EACxB,YAAY,UAAyC,CAAC,GAAG;AAC5D,UAAM;AAAA,MACF,GAAG;AAAA,MACH,MAAM;AAAA,IACV,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC;AAC5C,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC9C;AAAA,EAKA,MAAc,UAAyB;AAKnC,SAAK,IAAI,MAAM,iBAAiB,KAAK,OAAO,GAAG;AAC/C,SAAK,IAAI,MAAM,mBAAmB,KAAK,OAAO,KAAK;AACnD,QAAI,CAAC,KAAK,mBAAmB,CAAC,KAAK,gBAAgB,6BAA6B,GAAG;AAC/E,WAAK,OAAO,QAAQ,KAAK,QAAQ,KAAK,OAAO,KAAK;AAAA,IACtD;AAAA,EACJ;AAAA,EAKQ,SAAS,UAA4B;AACzC,QAAI;AACA,eAAS;AAAA,IACb,SAAS,GAAP;AACE,eAAS;AAAA,IACb;AAAA,EACJ;AAAA,EAEQ,UAAU,KAA6B;AAC3C,QAAI,OAAO,QAAQ,YAAY,IAAI,SAAS;AACxC,UAAI,IAAI,YAAY,QAAQ;AACxB,aAAK,YAAY,IAAI,OAAwB;AAE7C,YAAI,IAAI;AAAU,eAAK,OAAO,IAAI,MAAM,IAAI,SAAS,oBAAoB,IAAI,QAAQ;AAAA,MACzF;AAAA,IACJ;AAAA,EACJ;AAAA,EAEQ,YAAY,SAA8B;AAC9C,QAAI,KAAK,OAAO,OAAO,KAAK,OAAO,OAAO;AACtC,mBAAAA,QACK,KAAK,KAAK,OAAO,MAAM,oBAAoB,KAAK,OAAO,OAAO;AAAA,QAC3D,OAAO,QAAQ;AAAA,QACf,SAAS,QAAQ;AAAA,QACjB,UAAU,QAAQ;AAAA,QAClB,SAAS;AAAA,QACT,QAAQ;AAAA,UACJ,mBAAmB;AAAA,YACf,aAAa,QAAQ;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ,CAAC,EACA,KAAK,MAAM;AACR,aAAK,IAAI,MAAM,qCAAqC;AAAA,MACxD,CAAC,EACA,MAAM,CAAC,UAAU;AACd,aAAK,IAAI,MAAM,2CAA2C,KAAK,UAAU,KAAK,CAAC;AAAA,MACnF,CAAC;AAAA,IACT,OAAO;AACH,WAAK,IAAI,MAAM,mDAAmD,KAAK,UAAU,OAAO,CAAC;AAAA,IAC7F;AAAA,EACJ;AACJ;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAEzB,SAAO,UAAU,CAAC,YAAuD,IAAI,OAAO,OAAO;AAC/F,OAAO;AAEH,GAAC,MAAM,IAAI,OAAO,GAAG;AACzB;",
  "names": ["axios"]
}
